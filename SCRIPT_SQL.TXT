CREATE DATABASE IF NOT EXISTS vibra_db;

USE vibra_db;

CREATE TABLE artists (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE albums (
    id INT AUTO_INCREMENT PRIMARY KEY,
    artist_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    release_year YEAR NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (artist_id) REFERENCES artists(id) ON DELETE CASCADE
);

CREATE TABLE songs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    album_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    duration TIME NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (album_id) REFERENCES albums(id) ON DELETE CASCADE
);

INSERT INTO artists (name, bio) VALUES 
('Artista 1', 'Biografía del Artista 1'),
('Artista 2', 'Biografía del Artista 2');

INSERT INTO albums (artist_id, title, release_year) VALUES 
(1, 'Álbum 1', 2021),
(1, 'Álbum 2', 2022),
(2, 'Álbum 3', 2023);

INSERT INTO songs (album_id, title, duration) VALUES 
(1, 'Canción 1', '00:03:45'),
(1, 'Canción 2', '00:04:00'),
(2, 'Canción 3', '00:02:30'),
(3, 'Canción 4', '00:03:15');

SELECT COUNT(*) AS total_artists FROM artists;

SELECT COUNT(*) AS artists_starting_with_L FROM artists WHERE name LIKE 'L%';

SELECT * FROM artists ORDER BY name DESC;

SELECT a.title AS album_title, COUNT(s.id) AS song_count
FROM albums a
LEFT JOIN songs s ON a.id = s.album_id
GROUP BY a.id;
